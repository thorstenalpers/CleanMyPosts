name: "Deploy Release"

on:
  workflow_dispatch: # manual trigger

jobs:
  build:
    runs-on: windows-latest

    env:
      Solution: "src/CleanMyPosts.sln"
      UI_Project: "src/UI/UI.csproj"
      Test_Project: "src/Tests/Tests.csproj"
      Installer_Script: "installer/Installer.iss"
      FORCE_COLOR: "true"
      DOTNET_LOGGING__CONSOLE__COLORBEHAVIOR: Enabled

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Restore
      run: dotnet restore "${{ env.Solution }}"

    - name: Build
      run: dotnet build "${{ env.Solution }}" --configuration Release --no-restore

    - name: Run tests
      run: dotnet test "${{ env.Test_Project }}" --configuration Release --logger "console;verbosity=detailed" --filter "TestCategory!=Long-Running"

    - name: Extract Version
      id: get_version
      shell: pwsh
      run: |
        $content = Get-Content "${{ env.UI_Project }}"
        if ($content -match '<Version>(.+)</Version>') {
          $version = $matches[1]
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
        } else {
          throw "Version not found in project file"
        }

    - name: Publish Single EXE
      run: |
        dotnet publish "${{ env.UI_Project }}" -c Release -r win-x64 --self-contained true `
          /p:PublishSingleFile=true `
          /p:IncludeAllContentForSelfExtract=true `
          /p:EnableCompressionInSingleFile=true `
          -o artifacts/single-exe

    - name: Install Inno Setup
      run: |
        choco install innosetup --yes

    - name: Build Setup EXE
      run: |
        iscc "/DMyAppVersion=${{ env.VERSION }}" "/DMyAppExePath=artifacts\\single-exe\\*" "${{ env.Installer_Script }}"

    - name: Copy Setup EXE to Artifacts
      run: |
        mkdir -p artifacts/setup
        copy installer\Output\CleanMyPosts-Setup-${{ env.VERSION }}.exe artifacts\setup\

    - name: Rename Standalone EXE for Release
      run: |
        Rename-Item "artifacts/single-exe/CleanMyPosts.exe" "CleanMyPosts-standalone.exe"

    - name: Configure Git Credentials
      run: |
        echo "https://${{ secrets.GH_APIKEY }}@github.com" > $env:USERPROFILE\.git-credentials
        git config --global credential.helper store
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Create Git Tag
      run: |
        git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ env.VERSION }}"
        name: "CleanMyPosts ${{ env.VERSION }}"
        body_path: ./release-notes/v${{ env.VERSION }}.md
        files: |
          artifacts/single-exe/CleanMyPosts-standalone.exe
          artifacts/setup/CleanMyPosts-Setup-${{ env.VERSION }}.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
